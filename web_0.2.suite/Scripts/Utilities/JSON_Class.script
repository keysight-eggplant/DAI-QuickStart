on initialize


	if global FrameworkType is empty then
		put ("ScriptsAndHandlers","FlatFiles", "ScriptsAndFolders") into FrameworkType
		put item 1 of FrameworkType into my FrameworkType
	else
		put global FrameworkType into my FrameworkType
	end if
	
	
	
end initialize


on BuildJson (InfoDAIModel)
	put item 1 of InfoDAIModel into IDMapState
	put item 2 of  InfoDAIModel into AIModel
	
	BuildElements IDMapState,AIModel
	
end BuildJson


on BuildElements IDMapState,AIModel
	put AIModel.modeljson.elements into AIE
	put the number of items of AIE into Max
	repeat max times
		put item repeatindex() of AIE into SingleAIE
		put SingleAIE.name into ActionName
		replace space with "_" in ActionName
		//------
		if SingleAIE.parentid  is not empty then
			put IDMapState.(SingleAIE.parentid) into StateName
		end if
		
		if my FrameworkType = "ScriptsAndHandlers" then
			put StateName &".script:"& ActionName into ActionScriptPath
			put ActionName &".script:"& "StateCall" into StateScriptPath
			put "GlobalStates.script:ErrorModel" into ErrorScriptPath
			put "GlobalStates.script:Cleanup" into CleanupScriptPath
			put "GlobalStates.script:ExitModel" into ExitModelScriptPath
		else if  my FrameworkType = "FlatFiles" then
			put StateName &"_"&ActionName&".script" into ActionScriptPath
			put ActionName &"_StateCall.script"  into StateScriptPath
			put "GlobalStates_ErrorModel.script" into ErrorScriptPath
			put "GlobalStates_Cleanup.script" into CleanupScriptPath
			put "GlobalStates_ExitModel.script:ExitModel" into ExitModelScriptPath
		else
			logError "Issues with Finding FrameworkType"
			exit all
		end if
		
		
		if SingleAIE.type = "Action" then //---Do something to Actions
			insert [{fullName:ActionName, name:ActionName, scriptPath:"Snippets/"&ActionScriptPath, type:"normal"}]  into SingleAIE."snippets"
		else if  SingleAIE.type = "State" then //---Do something to States
			if SingleAIE.stateType = "Start"
				insert [{fullName:"ConfigFile", name:"ConfigFile", scriptPath:"SetupEnv/StartupEnv.script", type:"normal"}]  into SingleAIE."snippets"
insert [{fullName:ActionName, name:ActionName, scriptPath:"Snippets/"&StateScriptPath, type:"normal"}]  into SingleAIE."snippets"
			else if SingleAIE.stateType = "Exception"
				insert [{fullName:"ConfigFile", name:"ConfigFile", scriptPath:"Snippets/"&ErrorScriptPath, type:"normal"}]  into SingleAIE."snippets"
			else if SingleAIE.stateType = "Cleanup"
				insert [{fullName:"ConfigFile", name:"ConfigFile", scriptPath:"Snippets/"&CleanupScriptPath, type:"normal"}]  into SingleAIE."snippets"
			else if SingleAIE.name = "Exit"
				insert [{fullName:"ConfigFile", name:"ConfigFile", scriptPath:"Snippets/"&ExitModelScriptPath, type:"normal"}]  into SingleAIE."snippets"
			else 
				insert [{fullName:ActionName, name:ActionName, scriptPath:"Snippets/"&StateScriptPath, type:"normal"}]  into SingleAIE."snippets"
			end if	
		end if
		//------
		
		insert SingleAIE into NEWAIModel 
	end repeat
	
	delete AIModel.modeljson.elements
	put NEWAIModel into AIModel.modeljson.elements
	put AIModel.name & ".suite" into  AIModel.modeljson.suitePath
	put AIModel into my AIModel
	
end BuildElements


function GetJson
	return my AIModel
end GetJson